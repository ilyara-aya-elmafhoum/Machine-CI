
- name: Supprimer le dépôt Docker obsolète (s'il existe)
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/docker.list
    state: absent

- name: Installer les dépendances nécessaires (Debian)
  ansible.builtin.apt:
    name: >-
      {{
        ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg']
        + (['software-properties-common'] if ansible_distribution_major_version | int < 13 else [])
      }}
    state: present
    update_cache: true

- name: Créer le répertoire /etc/apt/keyrings
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Ajouter la clé GPG officielle de Docker
  ansible.builtin.shell: >
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Définir les permissions de lecture pour la clé GPG
  ansible.builtin.file:
    path: /etc/apt/keyrings/docker.gpg
    mode: 'a+r'

- name: Ajouter le dépôt Docker à la liste des sources APT
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: Installer Docker Engine, CLI, Containerd et le plugin Docker Compose
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

- name: Assurer que le service Docker est démarré et activé au démarrage
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Ajouter l'utilisateur distant au groupe docker (si nécessaire)
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true
  
